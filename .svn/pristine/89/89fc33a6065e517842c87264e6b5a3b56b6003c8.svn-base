cordova.define("org.apache.cordova.file.DirectoryReader",function(e,i,t){function n(e){this.localURL=e||null,this.hasReadEntries=!1}/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
*/
var r=e("cordova/exec"),o=e("./FileError");n.prototype.readEntries=function(i,t){if(this.hasReadEntries)return void i([]);var n=this;r("function"!=typeof i?null:function(t){for(var r=[],o=0;o<t.length;o++){var a=null;t[o].isDirectory?a=new(e("./DirectoryEntry")):t[o].isFile&&(a=new(e("./FileEntry"))),a.isDirectory=t[o].isDirectory,a.isFile=t[o].isFile,a.name=t[o].name,a.fullPath=t[o].fullPath,a.filesystem=new(e("./FileSystem"))(t[o].filesystemName),a.nativeURL=t[o].nativeURL,r.push(a)}n.hasReadEntries=!0,i(r)},"function"!=typeof t?null:function(e){t(new o(e))},"File","readEntries",[this.localURL])},t.exports=n});